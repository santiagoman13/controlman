<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mask</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_look = 'right'
state_move = 'stand'
state_action = 'breath'
state_aim = 'right'

can_shoot = true

head = instance_create(x,y,obj_elli_head)
legs = instance_create(x,y,obj_elli_legs)
arms = instance_create(x,y,obj_elli_arms)
palms = instance_create(x,y,obj_elli_palms)
body = instance_create(x,y,obj_elli_body)
pistol = instance_create(x,y,obj_pistol)
shotgun = instance_create(x,y,obj_shotgun)
rifle = instance_create(x,y,obj_rifle)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Animations

// Legs
if state_move = 'move'
    {
        legs.sprite_index = spr_elli_move_legs
        image_speed = 0.3
    }

if state_move = 'stand'
legs.sprite_index = spr_elli_stand_legs

if state_move = 'cover'
legs.sprite_index = spr_elli_cover_legs

// Head
if state_look = 'left'
head.sprite_index = spr_elli_head_left

if state_look = 'right'
head.sprite_index = spr_elli_head_right

if state_look = 'left'
if state_move = 'cover'
    {
        head.sprite_index = spr_elli_cover_head_left
    }

if state_look = 'right'
if state_move = 'cover'
    {
        head.sprite_index = spr_elli_cover_head_right
    }

// Arms - Aim - Left
if state_aim = 'left'
arms.sprite_index = spr_elli_hold_weapon_arms_left

if state_aim = 'left_up'
arms.sprite_index = spr_elli_hold_weapon_arms_left_side_up

if state_aim = 'left_down'
arms.sprite_index = spr_elli_hold_weapon_arms_left_side_down

if state_aim = 'up_left'
arms.sprite_index = spr_elli_hold_weapon_arms_left_up

if state_aim = 'down_left'
arms.sprite_index = spr_elli_hold_weapon_arms_left_down

// Arms - Aim - Right
if state_aim = 'right'
arms.sprite_index = spr_elli_hold_weapon_arms_right

if state_aim = 'right_up'
arms.sprite_index = spr_elli_hold_weapon_arms_right_side_up

if state_aim = 'right_down'
arms.sprite_index = spr_elli_hold_weapon_arms_right_side_down

if state_aim = 'up_right'
arms.sprite_index = spr_elli_hold_weapon_arms_right_up

if state_aim = 'down_right'
arms.sprite_index = spr_elli_hold_weapon_arms_right_down

// Arms reload
if state_action - 'remove_weapon'
if state_look = 'right'
arms.sprite_index = spr_elli_change_weapon_right

if state_action - 'remove_weapon'
if state_look = 'left'
arms.sprite_index = spr_elli_change_weapon_left

// Arms Cover
if state_move = 'cover'
if state_look - 'right'
arms.sprite_index = spr_elli_cover_arms_right

if state_move = 'cover'
if state_look - 'left'
arms.sprite_index = spr_elli_cover_arms_left

// Arms Breath
if state_action = 'breath'
    {
        arms.sprite_index = spr_elli_breath_arms
        image_speed = 0.1
    }
// Body
if state_action = 'breath'
    {
        body.sprite_index = spr_elli_breath_body
        image_speed = 0.1
    }

if state_move = 'cover'
body.sprite_index = spr_elli_cover_body
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>body.x = x
body.y = y

legs.x = x
legs.y = y

head.x = x
head.y = y

arms.x = x
arms.y = y

palms.x = x
palms.y = y

pistol.x = x
pistol.y = y

shotgun.x = x
shotgun.y = y

rifle.x = x
rifle.y = y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Gravity
gravity_direction = 270 
if place_free(x,y+1)
gravity = 1   
else  
gravity = 0
if vspeed&gt;5
vspeed=5;

// Moving Left
if keyboard_check(ord("A")) - keyboard_check(ord("D"))
if place_free(x-4,y)
if state_look = 'left' // If look left - normal speed
    {
        x-=4;
        state_move = 'move';
    }

if keyboard_check(ord("A")) - keyboard_check(ord("D"))
if place_free(x-4,y)
if state_look = 'right' // If look right - low speed
    {
        x-=2;
        state_move = 'move';
    }

// Moving Right
if keyboard_check(ord("D")) - keyboard_check(ord("A"))
if place_free(x+4,y)
if state_look = 'right' // If look right - normal speed
    {
        x+=4;
        state_move = 'move';
    }

if keyboard_check(ord("D")) - keyboard_check(ord("A"))
if place_free(x+4,y)
if state_look = 'left' // If look left - low speed
    {
        x+=2;
        state_move = 'move';
    }

// Stand
if keyboard_check(vk_nokey)
state_move = 'stand'

// Look direction then no aim
if keyboard_check(vk_nokey)
if state_look = 'left'
state_aim = 'left'

if keyboard_check(vk_nokey)
if state_look = 'right'
state_aim = 'right'

// Looking and Aim Left
if keyboard_check(vk_left) - keyboard_check(vk_right)
    {
        state_aim = 'left';
        state_look = 'left';
    }

if keyboard_check(vk_up) and keyboard_check(vk_left)
    {
        state_aim = 'left_up';
        state_look = 'left';
    }

if keyboard_check(vk_down) and keyboard_check(vk_left)
    {
        state_aim = 'left_down';
        state_look = 'left';
    }

if keyboard_check(vk_up) - keyboard_check(vk_down) - keyboard_check(vk_left) - keyboard_check(vk_right)
if state_look = 'left'
    {
        state_aim = 'up_left';
        state_look = 'left';
    }

if keyboard_check(vk_down) - keyboard_check(vk_up) - keyboard_check(vk_left) - keyboard_check(vk_right)
if state_look = 'left'
    {
        state_aim = 'down_left';
        state_look = 'left';
    }

// Looking and Aim Right
if keyboard_check(vk_right) - keyboard_check(vk_left)
    {
        state_aim = 'right';
        state_look = 'right';
    }

if keyboard_check(vk_up) and keyboard_check(vk_right)
    {
        state_aim = 'right_up';
        state_look = 'right';
    }

if keyboard_check(vk_down) and keyboard_check(vk_right)
    {
        state_aim = 'right_down';
        state_look = 'right';
    }

if keyboard_check(vk_up) - keyboard_check(vk_down) - keyboard_check(vk_left) - keyboard_check(vk_right)
if state_look = 'right'
    {
        state_aim = 'up_right';
        state_look = 'right';
    }

if keyboard_check(vk_down) - keyboard_check(vk_up) - keyboard_check(vk_left) - keyboard_check(vk_right)
if state_look = 'right'
    {
        state_aim = 'down_right';
        state_look = 'right';
    }
  
// Cover
if keyboard_key_press(ord("C"))
    {
        state_move = 'cover';
    }

if keyboard_key_release(ord("C"))
    {
        state_move = 'stand';
    }

// Jump
if keyboard_check(vk_space)
if !place_free(x,y+1)
    {
        vspeed=-10;
    }
    
// Change weapon - Remove in back
if state_move = stand
    {
        if keyboard_check_pressed(ord("1"))
        state_action = 'remove_weapon'

        if keyboard_check_pressed(ord("2"))
        state_action = 'remove_weapon'

        if keyboard_check_pressed(ord("3"))
        state_action = 'remove_weapon'

        if keyboard_check_pressed(ord("4"))
        state_action = 'remove_weapon'
    }

// Change weapon - Take from back
if state_move = stand
    {
        if keyboard_check_released(ord("1"))
        state_action = 'hold_pistol'
        
        if keyboard_check_released(ord("2"))
        state_action = 'hold_shotgun'

        if keyboard_check_released(ord("3"))
        state_action = 'hold_rifle'

        if keyboard_check_released(ord("4"))
        state_action = 'breath'
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_platform">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vspeed &gt; 0 &amp;&amp; not place_free(x,y+vspeed))   
{ 
  move_contact(270);   
  vspeed = 0; 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_stair">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(ord("W"))
vspeed=-5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if kev_cover = false
{
obj_kev_body.sprite_index = spr_stand_body

// arms and palms change weapon animations
if obj_kev_head.sprite_index = spr_head_right
{
   obj_kev_arms.sprite_index = spr_change_pistol_arms_right
   obj_kev_palms.sprite_index = spr_change_pistol_palms_right
}

if obj_kev_head.sprite_index = spr_head_left
{
   obj_kev_arms.sprite_index = spr_change_pistol_arms_left
   obj_kev_palms.sprite_index = spr_change_pistol_palms_left
}

// pistol change weapon animations
if obj_kev_head.sprite_index = spr_head_right
obj_pistol.sprite_index = spr_change_pistol_right

if obj_kev_head.sprite_index = spr_head_left
obj_pistol.sprite_index = spr_change_pistol_left

// shotgun change weapon animations
if obj_kev_head.sprite_index = spr_head_right
obj_shotgun.sprite_index = spr_change_shotgun_right

if obj_kev_head.sprite_index = spr_head_left
obj_shotgun.sprite_index = spr_change_shotgun_left

// rifle change weapon animations
if obj_kev_head.sprite_index = spr_head_right
obj_rifle.sprite_index = spr_change_rifle_right

if obj_kev_head.sprite_index = spr_head_left
obj_rifle.sprite_index = spr_change_rifle_left
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if elli_cover = false
{
obj_shotgun.visible = false
obj_pistol.visible = false
obj_rifle.visible = false

obj_kev_arms.sprite_index = spr_breath_arms
image_speed = 0.1

obj_kev_palms.sprite_index = spr_breath_palms
image_speed = 0.1

obj_kev_body.sprite_index = spr_breath_body
image_speed = 0.1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if elli_cover = false
{
obj_kev_body.sprite_index = spr_breath_body
image_speed = 0.1

// visible of weapons
if obj_rifle.visible = false
{
    obj_rifle.visible = true
    obj_shotgun.visible = false
    obj_pistol.visible = false
}

// arms and palms change weapon animations
if obj_kev_head.sprite_index = spr_head_right
{
   obj_kev_arms.sprite_index = spr_hold_weapon_arms_right
   obj_kev_palms.sprite_index = spr_hold_weapon_palms_right
}

if obj_kev_head.sprite_index = spr_head_left
{
   obj_kev_arms.sprite_index = spr_hold_weapon_arms_left
   obj_kev_palms.sprite_index = spr_hold_weapon_palms_left
}

// pistol change weapon animations
if obj_pistol.sprite_index = spr_change_pistol_right
obj_pistol.sprite_index = spr_pistol_right

if obj_pistol.sprite_index = spr_change_pistol_left
obj_pistol.sprite_index = spr_pistol_left

// shotgun change weapon animations
if obj_shotgun.sprite_index = spr_change_shotgun_right
obj_shotgun.sprite_index = spr_shotgun_right

if obj_shotgun.sprite_index = spr_change_shotgun_left
obj_shotgun.sprite_index = spr_shotgun_left

// rifle change weapon animations
if obj_rifle.sprite_index = spr_change_rifle_right
obj_rifle.sprite_index = spr_rifle_right

if obj_rifle.sprite_index = spr_change_rifle_left
obj_rifle.sprite_index = spr_rifle_left
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if elli_cover = false
{
obj_kev_body.sprite_index = spr_breath_body
image_speed = 0.1

// visible of weapons
if obj_shotgun.visible = false
{
    obj_shotgun.visible = true
    obj_pistol.visible = false
    obj_rifle.visible = false
}

// arms and palms change weapon animations
if obj_kev_head.sprite_index = spr_head_right
{
   obj_kev_arms.sprite_index = spr_hold_weapon_arms_right
   obj_kev_palms.sprite_index = spr_hold_weapon_palms_right
}

if obj_kev_head.sprite_index = spr_head_left
{
   obj_kev_arms.sprite_index = spr_hold_weapon_arms_left
   obj_kev_palms.sprite_index = spr_hold_weapon_palms_left
}

// pistol change weapon animations
if obj_pistol.sprite_index = spr_change_pistol_right
obj_pistol.sprite_index = spr_pistol_right

if obj_pistol.sprite_index = spr_change_pistol_left
obj_pistol.sprite_index = spr_pistol_left


// shotgun change weapon animations
if obj_shotgun.sprite_index = spr_change_shotgun_right
obj_shotgun.sprite_index = spr_shotgun_right

if obj_shotgun.sprite_index = spr_change_shotgun_left
obj_shotgun.sprite_index = spr_shotgun_left

// rifle change weapon animations
if obj_rifle.sprite_index = spr_change_rifle_right
obj_rifle.sprite_index = spr_rifle_right

if obj_rifle.sprite_index = spr_change_rifle_left
obj_rifle.sprite_index = spr_rifle_left
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if elli_cover = false
{
obj_kev_body.sprite_index = spr_breath_body
image_speed = 0.1

// visible of weapons
if obj_pistol.visible = false
{
    obj_pistol.visible = true
    obj_shotgun.visible = false
    obj_rifle.visible = false
}

// arms and palms change weapon animations
if obj_kev_head.sprite_index = spr_head_right
{
   obj_kev_arms.sprite_index = spr_hold_pistol_arms_right
   obj_kev_palms.sprite_index = spr_hold_pistol_palms_right
}

if obj_kev_head.sprite_index = spr_head_left
{
   obj_kev_arms.sprite_index = spr_hold_pistol_arms_left
   obj_kev_palms.sprite_index = spr_hold_pistol_palms_left
}
 
// pistol change weapon animations
if obj_kev_head.sprite_index = spr_head_right
obj_pistol.sprite_index = spr_pistol_right

if obj_kev_head.sprite_index = spr_head_left
obj_pistol.sprite_index = spr_pistol_left

// shotgun change weapon animations
if obj_kev_head.sprite_index = spr_head_right
obj_shotgun.sprite_index = spr_shotgun_right

if obj_kev_head.sprite_index = spr_head_left
obj_shotgun.sprite_index = spr_shotgun_left

// rifle change weapon animations
if obj_kev_head.sprite_index = spr_head_right
obj_rifle.sprite_index = spr_rifle_right

if obj_kev_head.sprite_index = spr_head_left
obj_rifle.sprite_index = spr_rifle_left
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
